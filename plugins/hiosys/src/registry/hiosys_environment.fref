<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE ReferencePage SYSTEM "http://www.faudes.org/dtd/1.0/referencepage.dtd">
<ReferencePage chapter="Reference" section="HioSys" page="none" title="HioSys - Environment">

<h1>
HioSys I/O Systems
</h1>

<h2>
HioEnvironment
</h2>


<p>
<table border="0">
<tr>
<td>
<img fsrc="FAUDES_IMAGES/hio_hioenvironment.png"/>
</td>
    
<td>
The data-type <strong>HioEnvironment</strong> is a <ftype>Generator</ftype> that is suited to model the I/O-system <strong>I/O environment</strong>.
For the I/O shuffle (<ffnct>HioShuffle</ffnct>) of a group of two or more plant components, an I/O environment <fimath>S_{EL}=(\Sigma_{EL},L_{EL})</fimath> models the
<i>internal interaction</i> of the components among themselves and the <i>external interaction</i> of the group with the remaining
environment. The I/O environment is connected with the <i>I/O shuffle of plant components</i> and with the <i>remaining environment</i> via a <a href="hiosys_index.html#controllerport">controller-</a> and
a <a href="hiosys_index.html#plantport">plant-I/O port</a>, respectively. The event sets are denoted
<i>Ul</i> and <i>Yl</i> for plant interaction and
<i>Ue</i> and <i>Ye</i> for interaction with the remaining environment. Thus,
the overall alphabet is composed as disjoint union
<fimath>\Sigma=Ul\cup Yl\cup Ue\cup Ye</fimath>. Technically, an I/O environment is of the same structure as an I/O controller.
</td>
</tr>
</table>
</p>

<h3>
I/O environment: Definition
</h3>

<p>

An I/O environment is a tuple <fimath>S_{EL} = (U_L,Y_L,U_E,Y_E,L_{EL})</fimath>, where
<ul class="l2">
<li><p><fimath>\Sigma_{EL}</fimath> is an alphabet with 
<fimath>\Sigma_{EL} := \Sigma_{L} \dcup \Sigma_{E}</fimath>,</p></li>

<li><p><fimath>L_{EL}</fimath> is a language over <fimath>\Sigma_{EL}</fimath>,</p></li>

<li><p><fimath>(U_L,Y_L)</fimath> and <fimath>(U_E,Y_E)</fimath> are a plant- and a controller-I/O port of <fimath>S_{EL}</fimath>, respectively,</p></li>

<li><p><fimath>L_{EL}\subseteq\Closure{(Y_E U_E + Y_E Y_L U_L U_E)^*}</fimath>, and</p></li>

<li><p><fimath>L_{EL}</fimath> is a complete language (see <ffnct>IsComplete</ffnct>).</p></li>
</ul>
</p>
<p>
The 4th item avoids loops of the sort <fimath>(Y_L U_L)^*</fimath>, i.e. forbids operator commands without effect on the plant
being controlled. The last item forces the I/O environment to respond to plant output or operator input.<br/>
By the function <ffnct>IsHioEnvironmentForm</ffnct>, an HioEnvironment generator can be tested for compatibility with the above definition.
</p>

<p>
<a href="hiosys_index.html">HioSys Home</a> | <a href="hiosys_types.html">HioSys I/O Systems</a>
</p>
</ReferencePage>

  
